<Window x:Class="ShutdownTimer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Shutdown Timer" Height="450" Width="500"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        >

    <Window.Resources>
        <LinearGradientBrush x:Key="BUTTONSELECTCOLOR2" StartPoint="0,0" EndPoint="0.5,1" ColorInterpolationMode="ScRgbLinearInterpolation">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="Red" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BUTTONNOTSELECT" StartPoint="0.5,0" EndPoint="0.5,1" ColorInterpolationMode="ScRgbLinearInterpolation">
            <GradientStop Color="GreenYellow" Offset="0"/>
            <GradientStop Color="#56228B22" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PROGRESSBARFOREGROUNDYELLOW" StartPoint="0,0" EndPoint="1,0" ColorInterpolationMode="ScRgbLinearInterpolation">
            <GradientStop Color="Goldenrod" Offset="0" />
            <GradientStop Color="Yellow" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PROGRESSBARFOREGROUNDGREEN" StartPoint="0,0" EndPoint="1,0" ColorInterpolationMode="ScRgbLinearInterpolation">
            <GradientStop Color="LimeGreen" Offset="0"/>
            <GradientStop Color="Green" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PROGRESSBARFOREGROUNDRED" StartPoint="0,0" EndPoint="1,0" ColorInterpolationMode="ScRgbLinearInterpolation">
            <GradientStop Color="Firebrick" Offset="0"/>
            <GradientStop Color="Red" Offset="1"/>
        </LinearGradientBrush>


    </Window.Resources>



    <Grid Margin="0,0,2,-40">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <ProgressBar x:Name="progressBar1" RenderTransformOrigin="0.06,4.2" Background="White" Minimum="0" Margin="3,-5,0,5" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

        <Label Content="Shutdown Timer" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="136,34,0,364" FontSize="30" Grid.Column="1" Width="227"/>

        <TextBlock x:Name="shutdownInstructButton" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="175,250,0,0" Text="" RenderTransformOrigin="-0.549,2.12" FontSize="16" Grid.Column="1" FontStyle="Italic" Foreground="Blue" Height="21" Width="291"/>
        <TextBlock x:Name="restartInstructButton" HorizontalAlignment="Left" Margin="175,150,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" FontSize="16" Grid.Column="1" FontStyle="Italic" Foreground="Blue" Height="21" Width="291"/>
        <TextBlock x:Name="logOffInstructButton" HorizontalAlignment="Left" Margin="175,200,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" FontSize="16" Grid.Column="1" FontStyle="Italic" Foreground="Blue" Height="21" Width="291"/>
        <TextBlock x:Name="timerInstructLabel" Grid.Column="1" HorizontalAlignment="Left" Margin="340,100,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="126" FontSize="16" FontStyle="Italic" Foreground="Blue" Height="131"/>

        <TextBox x:Name="hourInput"   Grid.Column="1" HorizontalAlignment="Left" Height="23" Width="50" Margin="180,100,0,0" TextWrapping="Wrap" VerticalAlignment="Top"  FontStyle="Italic" Foreground="Blue" RenderTransformOrigin="-0.73,0.478" GotFocus="hourInput_GotFocus"   Text="Hours"   FontSize="11" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TouchEnter="hourInput_TouchEnter" MouseEnter="hourInput_MouseEnter"   MouseLeave="hourInput_MouseLeave"  LostFocus="hourInput_LostFocus" />
        <TextBox x:Name="minuteInput" Grid.Column="1" HorizontalAlignment="Left" Height="23" Width="50" Margin="235,100,0,0" TextWrapping="Wrap" VerticalAlignment="Top"  FontStyle="Italic" Foreground="Blue" RenderTransformOrigin="-0.73,0.478" GotFocus="minuteInput_GotFocus" Text="Minutes" FontSize="11" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"                                   MouseEnter="minuteInput_MouseEnter" MouseLeave="minuteInput_MouseLeave" LostFocus="minuteInput_LostFocus" />
        <TextBox x:Name="secondInput" Grid.Column="1" HorizontalAlignment="Left" Height="23" Width="50" Margin="290,100,0,0" TextWrapping="Wrap" VerticalAlignment="Top"  FontStyle="Italic" Foreground="Blue" RenderTransformOrigin="-0.73,0.478" GotFocus="secondInput_GotFocus" Text="Seconds" FontSize="11" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TouchDown="secondInput_TouchDown" MouseEnter="secondInput_MouseEnter" MouseLeave="secondInput_MouseLeave" LostFocus="secondInput_LostFocus" />

        <Label x:Name="TimerLabel1" Content="Timer" Grid.Column="1" HorizontalAlignment="Left" Margin="50,100,0,0" VerticalAlignment="Top" Width="75" Foreground="Maroon" FontSize="15" HorizontalContentAlignment="Center" MouseEnter="TimerLabel1_MouseEnter" MouseLeave="TimerLabel1_MouseLeave" Height="30">
            <Label.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="GreenYellow" Offset="0"/>
                    <GradientStop Color="#56228B22" Offset="1"/>
                </LinearGradientBrush>
            </Label.Background>
        </Label>

        <Button x:Name="restartButton" Content="Restart" Grid.Column="1" HorizontalAlignment="Left" Margin="50,150,0,0" VerticalAlignment="Top" Width="75" FontSize="15"  Foreground="Maroon" MouseEnter="restartButton_MouseEnter" MouseLeave="restartButton_MouseLeave" Click="restartButton_Click" Height="24" GotFocus="restartButton_GotFocus" LostFocus="restartButton_LostFocus" >
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <!--<Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                    </Trigger>-->
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="GreenYellow" Offset="0"/>
                    <GradientStop Color="#56228B22" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>

        <Button x:Name="logOffButton" Content="Log Off" Grid.Column="1" HorizontalAlignment="Left" Margin="50,200,0,0" VerticalAlignment="Top" Width="75" FontSize="15" Foreground="Maroon" MouseEnter="logOffButton_MouseEnter" MouseLeave="logOffButton_MouseLeave" Click="logOffButton_Click" Height="24" GotFocus="logOffButton_GotFocus" LostFocus="logOffButton_LostFocus" Style="{DynamicResource LogOffButton}" >
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="LogOffButton" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <!--<Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                    </Trigger>-->
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="GreenYellow" Offset="0"/>
                    <GradientStop Color="#56228B22" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>

        <Button x:Name="shutdownButton" Content="Shutdown" Grid.Column="1" HorizontalAlignment="Left" Margin="50,250,0,0" VerticalAlignment="Top" Width="75" FontSize="15" Foreground="Maroon" MouseEnter="shutdownButton_MouseEnter" MouseLeave="shutdownButton_MouseLeave" Click="shutdownButton_Click" Height="24" GotFocus="shutdownButton_GotFocus" LostFocus="shutdownButton_LostFocus" Style="{DynamicResource shutdownButtonStyle}" >
            <Button.Resources>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                <Style x:Key="shutdownButtonStyle" TargetType="{x:Type Button}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <!--<Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                    </Trigger>-->
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="GreenYellow" Offset="0"/>
                    <GradientStop Color="#56228B22" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>


        <TextBlock x:Name="finalWarning1" Grid.Column="1" HorizontalAlignment="Left" Margin="175,128,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontStyle="Italic" Foreground="Blue" FontSize="10" Width="134" Text="" Height="17"/>
        <TextBlock x:Name="finalWarning2" Grid.Column="1" HorizontalAlignment="Left" Margin="50,350,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="362" Height="66" FontSize="14" FontStyle="Oblique" Foreground="Blue" />
        <Label x:Name="label1" Content="" Grid.Column="1" HorizontalAlignment="Left" Margin="362,303,0,0" VerticalAlignment="Top" Width="78" Height="34"/>
        <Label x:Name="label2" Content="Project Dead Rat" Foreground="Blue" Grid.Column="1" HorizontalAlignment="Left" Margin="372,0,0,0" VerticalAlignment="Top" FontWeight="Bold" Width="118" RenderTransformOrigin="0.361,-3.538" Height="26" FontFamily="French Script MT" FontSize="16"/>


        <!--<TextBlock Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="232,100,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top"/>-->
        <!--<TextBlock Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="270,100,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top"/>-->

    </Grid>
</Window>
